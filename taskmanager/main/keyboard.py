from telebot.callback_data import CallbackData
from telebot import types
from .callback import *


#MAIN WOOD EXPORT MENU GATE
def tg_bot_menu():
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            text='–ì–∏–±–∫–∏–µ –ª—å–≥–æ—Ç—ã üìù',
            callback_data='benefits'
        )
    )
    markup.add(
        types.InlineKeyboardButton(
            text='–ú–æ–π –±–∞–ª–∞–Ω—Å üíµ',
            callback_data='my_balance'
        )
    )
    markup.add(
        types.InlineKeyboardButton(
            text='–ú–æ–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ üë•',
            callback_data='my_workers'
        )
    )
    markup.add(
        types.InlineKeyboardButton(
            text='–ë–æ–ª—å–Ω–∏—á–Ω—ã–π ‚öïÔ∏è',
            callback_data='sick_leave'
        )
    )
    markup.add(
        types.InlineKeyboardButton(
            text='–í—ã—Ö–æ–¥ üîô',
            callback_data='exit'
        )
    )
    return markup


def list_of_benefits():
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            text='–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ',
            callback_data='traveling'
        )
    )
    markup.add(
        types.InlineKeyboardButton(
            text='–ó–¥–æ—Ä–æ–≤—å–µ',
            callback_data='health'
        )
    )
    markup.add(
        types.InlineKeyboardButton(
            text='–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
            callback_data='education'
        )
    )
    markup.add(
        types.InlineKeyboardButton(
            text='–°–ø–æ—Ä—Ç',
            callback_data='sport'
        )
    )
    markup.add(
        types.InlineKeyboardButton(
            text='–í—ã—Ö–æ–¥ üîô',
            callback_data='back'
        )
    )
    return markup



def benefits_create_app():
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            text='–î–∞',
            callback_data='anonymously'
        ),
        types.InlineKeyboardButton(
            text='–ù–µ—Ç',
            callback_data='not_anonymously'
        ),
    )
    markup.add(
        types.InlineKeyboardButton(
            text='–ù–∞–∑–∞–¥ üîô',
            callback_data='feedback'
        )
    )
    return markup




#SICK_LEAVE
def sick_leave_menu():
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            text='–û—Ç–∫—Ä—ã—Ç—å –±–æ–ª—å–Ω–∏—á–Ω—ã–π',
            callback_data='open_sick_leave'
        )
    )
    markup.add(
        types.InlineKeyboardButton(
            text='–ó–∞–∫—Ä—ã—Ç—å –±–æ–ª—å–Ω–∏—á–Ω—ã–π',
            callback_data='close_sick_leave'
        )
    )
    markup.add(
        types.InlineKeyboardButton(
            text='–ù–∞–∑–∞–¥ üîô',
            callback_data='baack'
        )
    )
    return markup


def anonymously_keyboard():
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            text='–î–∞ üôà',
            callback_data='anonymously'
        ),
        types.InlineKeyboardButton(
            text='–ù–µ—Ç üêµ',
            callback_data='not_anonymously'
        ),
    )
    markup.add(
        types.InlineKeyboardButton(
            text='–ù–∞–∑–∞–¥ üîô',
            callback_data='feedback'
        )
    )
    return markup